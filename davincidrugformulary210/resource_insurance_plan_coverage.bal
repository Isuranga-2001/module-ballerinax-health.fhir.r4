// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_INSURANCEPLANCOVERAGE = "http://hl7.org/fhir/us/davinci-drug-formulary/StructureDefinition/insurance-plan-coverage";
public const RESOURCE_NAME_INSURANCEPLANCOVERAGE = "Coverage";

# FHIR InsurancePlanCoverage resource record.
#
# + resourceType - The type of the resource describes
# + extension - An Extension
# + subrogation - When 'subrogation=true' this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + 'type - The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization.
# + network - The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the 'in-network' rate, otherwise 'out of network' terms and conditions apply.
# + payor - The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + relationship - The relationship of beneficiary (patient) to the subscriber.
# + 'class - A suite of underwriter specific classifiers.
# * class Slicings
# 1) InsurancePlanCoverageClassPlan: Plan
#       - min = 0
#       - max = 1
#
# 2) InsurancePlanCoverageClassGroup: Group
#       - min = 0
#       - max = 1
#
# + dependent - A unique identifier for a dependent under the coverage.
# + 'order - The order of applicability of this coverage relative to other coverages which are currently in force. Note, there may be gaps in the numbering and this does not imply primary, secondary etc. as the specific positioning of coverages depends upon the episode of care.
# + identifier - A unique identifier assigned to this coverage.
# * identifier Slicings
# 1) InsurancePlanCoverageIdentifierMemberid: Member ID
#       - min = 0
#       - max = 1
#
# + costToBeneficiary - A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been included on the health card.
# + period - Time period during which the coverage is in force. A missing start date indicates the start date isn't known, a missing end date means the coverage is continuing to be in force.
# + subscriber - The party who has signed-up for or 'owns' the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due.
# + contract - The policy(s) which constitute this insurance coverage.
# + subscriberId - The insurer assigned ID for the Subscriber.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + beneficiary - The party who benefits from the insurance coverage; the patient when products and/or services are provided.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + policyHolder - The party who 'owns' the insurance policy.
# + status - The status of the resource instance.
@r4:ResourceDefinition {
    resourceType: "Coverage",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/davinci-drug-formulary/StructureDefinition/insurance-plan-coverage",
    elements: {
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.extension"
        },
        "subrogation" : {
            name: "subrogation",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.subrogation"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "type" : {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.type",
            valueSet: "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
        },
        "network" : {
            name: "network",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.network"
        },
        "payor" : {
            name: "payor",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: true,
            path: "Coverage.payor"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.text"
        },
        "relationship" : {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Coverage.relationship",
            valueSet: "http://hl7.org/fhir/ValueSet/subscriber-relationship"
        },
        "class" : {
            name: "class",
            dataType: InsurancePlanCoverageClass,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.class"
        },
        "dependent" : {
            name: "dependent",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.dependent"
        },
        "order" : {
            name: "order",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.order"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.identifier"
        },
        "costToBeneficiary" : {
            name: "costToBeneficiary",
            dataType: InsurancePlanCoverageCostToBeneficiary,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.costToBeneficiary"
        },
        "period" : {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.period"
        },
        "subscriber" : {
            name: "subscriber",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.subscriber"
        },
        "contract" : {
            name: "contract",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.contract"
        },
        "subscriberId" : {
            name: "subscriberId",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.subscriberId"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Coverage.contained"
        },
        "beneficiary" : {
            name: "beneficiary",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Coverage.beneficiary"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.implicitRules"
        },
        "policyHolder" : {
            name: "policyHolder",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Coverage.policyHolder"
        },
        "status" : {
            name: "status",
            dataType: InsurancePlanCoverageStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Coverage.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type InsurancePlanCoverage record {|
    *r4:DomainResource;

    RESOURCE_NAME_INSURANCEPLANCOVERAGE resourceType = RESOURCE_NAME_INSURANCEPLANCOVERAGE;

    r4:Extension[] extension?;
    boolean subrogation?;
    r4:Extension[] modifierExtension?;
    r4:code language?;
    r4:CodeableConcept 'type?;
    string network?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Coverage.payor constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Coverage.payor constraint. This field must be an array containing at most one item."
        }
    }
    r4:Reference[] payor;
    string id?;
    r4:Narrative text?;
    r4:CodeableConcept relationship;
    InsurancePlanCoverageClass[] 'class?;
    string dependent?;
    r4:positiveInt 'order?;
    r4:Identifier[] identifier?;
    InsurancePlanCoverageCostToBeneficiary[] costToBeneficiary?;
    r4:Period period?;
    r4:Reference subscriber?;
    r4:Reference[] contract?;
    string subscriberId?;
    r4:Resource[] contained?;
    r4:Reference beneficiary;
    r4:Meta meta?;
    r4:uri implicitRules?;
    r4:Reference policyHolder?;
    InsurancePlanCoverageStatus status;
    r4:Element ...;
|};

# FHIR InsurancePlanCoverageIdentifierMemberid datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageIdentifierMemberid",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Coverage.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Coverage.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Coverage.identifier.system"
        },
        "use": {
            name: "use",
            dataType: InsurancePlanCoverageIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Coverage.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Coverage.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.identifier.id"
        },
        "type": {
            name: "type",
            dataType: InsurancePlanCoverageIdentifierType,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Coverage.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Coverage.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageIdentifierMemberid record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system?;
    InsurancePlanCoverageIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    InsurancePlanCoverageIdentifierType 'type;
    string value?;
|};

# FHIR InsurancePlanCoverageClassType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: InsurancePlanCoverageClassTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Coverage.class.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Coverage.class.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Coverage.class.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    InsurancePlanCoverageClassTypeCoding[] coding;
|};

# InsurancePlanCoverageStatus enum
public enum InsurancePlanCoverageStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR InsurancePlanCoverageClassTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Coverage.class.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Coverage.class.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/coverage-class";
    r4:code code = "plan";
|};

# FHIR InsurancePlanCoverageClassTypeOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassTypeOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: InsurancePlanCoverageClassTypeCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Coverage.class.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassTypeOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Coverage.class.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Coverage.class.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    InsurancePlanCoverageClassTypeCodingOne[] coding;
|};

# FHIR InsurancePlanCoverageClass datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short description for the class.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.
# + value - The alphanumeric string value associated with the insurer issued label.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClass",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Coverage.class.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Coverage.class.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short description for the class.",
            path: "Coverage.class.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.class.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.",
            path: "Coverage.class.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The alphanumeric string value associated with the insurer issued label.",
            path: "Coverage.class.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClass record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string name?;
    string id?;
    r4:CodeableConcept 'type;
    string value;
|};

# FHIR InsurancePlanCoverageCostToBeneficiaryException datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The timeframe during when the exception is in force.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The code for the specific exception.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageCostToBeneficiaryException",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Coverage.costToBeneficiary.exception.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The timeframe during when the exception is in force.",
            path: "Coverage.costToBeneficiary.exception.period"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Coverage.costToBeneficiary.exception.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.costToBeneficiary.exception.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The code for the specific exception.",
            path: "Coverage.costToBeneficiary.exception.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageCostToBeneficiaryException record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type;
|};

# InsurancePlanCoverageIdentifierUse enum
public enum InsurancePlanCoverageIdentifierUse {
   CODE_USE_SECONDARY = "secondary",
   CODE_USE_TEMP = "temp",
   CODE_USE_USUAL = "usual",
   CODE_USE_OLD = "old",
   CODE_USE_OFFICIAL = "official"
}

# FHIR InsurancePlanCoverageIdentifierType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageIdentifierType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: InsurancePlanCoverageIdentifierTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Coverage.identifier.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageIdentifierType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Coverage.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Coverage.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    InsurancePlanCoverageIdentifierTypeCoding[] coding;
|};

# FHIR InsurancePlanCoverageCostToBeneficiary datatype record.
#
# + exception - A suite of codes indicating exceptions or reductions to patient costs and their effective periods.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueMoney - The amount due from the patient for the cost category.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The category of patient centric costs associated with treatment.
# + valueQuantity - The amount due from the patient for the cost category.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageCostToBeneficiary",
    baseType: (),
    elements: {
        "exception": {
            name: "exception",
            dataType: InsurancePlanCoverageCostToBeneficiaryException,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.",
            path: "Coverage.costToBeneficiary.exception"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Coverage.costToBeneficiary.extension"
        },
        "valueMoney": {
            name: "valueMoney",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "The amount due from the patient for the cost category.",
            path: "Coverage.costToBeneficiary.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Coverage.costToBeneficiary.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.costToBeneficiary.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The category of patient centric costs associated with treatment.",
            path: "Coverage.costToBeneficiary.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "The amount due from the patient for the cost category.",
            path: "Coverage.costToBeneficiary.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageCostToBeneficiary record {|
    *r4:BackboneElement;

    InsurancePlanCoverageCostToBeneficiaryException[] exception?;
    r4:Extension[] extension?;
    r4:Money valueMoney;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type?;
    r4:Quantity valueQuantity;
|};

# FHIR InsurancePlanCoverageClassPlan datatype record.
#
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short description for the class.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.
# + value - The alphanumeric string value associated with the insurer issued label.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassPlan",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Coverage.class.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Coverage.class.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short description for the class.",
            path: "Coverage.class.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.class.id"
        },
        "type": {
            name: "type",
            dataType: InsurancePlanCoverageClassType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.",
            path: "Coverage.class.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The alphanumeric string value associated with the insurer issued label.",
            path: "Coverage.class.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassPlan record {|
    *InsurancePlanCoverageClass;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string name?;
    string id?;
    InsurancePlanCoverageClassType 'type;
    string value;
|};

# FHIR InsurancePlanCoverageIdentifierTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageIdentifierTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Coverage.identifier.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Coverage.identifier.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageIdentifierTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/v2-0203";
    r4:code code = "MB";
|};

# FHIR InsurancePlanCoverageClassGroup datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short description for the class.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.
# + value - The alphanumeric string value associated with the insurer issued label.
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassGroup",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Coverage.class.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Coverage.class.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short description for the class.",
            path: "Coverage.class.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Coverage.class.id"
        },
        "type": {
            name: "type",
            dataType: InsurancePlanCoverageClassTypeOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.",
            path: "Coverage.class.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The alphanumeric string value associated with the insurer issued label.",
            path: "Coverage.class.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassGroup record {|
    *InsurancePlanCoverageClass;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string name?;
    string id?;
    InsurancePlanCoverageClassTypeOne 'type;
    string value;
|};

# FHIR InsurancePlanCoverageClassTypeCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "InsurancePlanCoverageClassTypeCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Coverage.class.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Coverage.class.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InsurancePlanCoverageClassTypeCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/coverage-class";
    r4:code code = "group";
|};

