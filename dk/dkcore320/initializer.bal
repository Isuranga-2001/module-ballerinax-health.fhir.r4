// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;
import ballerina/log;

const FHIR_IG = "dkcore320";

# Initializer for the module
# + return - returns error if error occurred
function init() returns r4:FHIRError? {
    // Anything to initialize should happen here here

    //update terminology processor
    // TODO: https://github.com/wso2-enterprise/open-healthcare/issues/1047
    r4:InMemoryTerminologyLoader terminologyLoader = new(FHIR_CODE_SYSTEMS, FHIR_VALUE_SETS);
    r4:Terminology terminology = check terminologyLoader.load();

    readonly & r4:IGInfoRecord baseIgRecord = {
        title: "dkcore320",
        name: "dkcore320",
        terminology: terminology,
        profiles: {
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-patient": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-patient",
                resourceType: "Patient",
                modelType: DkCorePatient
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-basic-observation": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-basic-observation",
                resourceType: "Observation",
                modelType: DkCoreBasicObservation
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-observation": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-observation",
                resourceType: "Observation",
                modelType: DkCoreObservation
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-related-person": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-related-person",
                resourceType: "RelatedPerson",
                modelType: DkCoreRelatedPerson
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-condition": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-condition",
                resourceType: "Condition",
                modelType: DkCoreCondition
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-organization": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-organization",
                resourceType: "Organization",
                modelType: DkCoreOrganization
            },
            "http://hl7.dk/fhir/core/StructureDefinition/dk-core-practitioner": {
                url: "http://hl7.dk/fhir/core/StructureDefinition/dk-core-practitioner",
                resourceType: "Practitioner",
                modelType: DkCorePractitioner
            }
        },
        searchParameters: [DKCORE_IG_SEARCH_PARAMS_1]
    };
    r4:FHIRImplementationGuide baseImplementationGuide = new(baseIgRecord);
    check fhirRegistry.addImplementationGuide(baseImplementationGuide);

    log:printDebug("FHIR R4 DKCore Module initialized.");
}

# This empty function is used to initialize the module by other modules/packages.
public isolated function initialize() {};
