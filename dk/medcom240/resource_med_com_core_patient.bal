// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_MEDCOMCOREPATIENT = "http://medcomfhir.dk/ig/core/StructureDefinition/medcom-core-patient";
public const RESOURCE_NAME_MEDCOMCOREPATIENT = "Patient";

# FHIR MedComCorePatient resource record.
#
# + resourceType - The type of the resource describes
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + gender - Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + link - Link to another patient resource that concerns the same actual patient.
# + language - The base language in which the resource is written.
# + contact - A contact party (e.g. guardian, partner, friend) for the patient.
# + deceasedDateTime - Shall contain information if the patient is deceased and it is relevant in the given context
# + generalPractitioner - Patient's nominated care provider.
# * generalPractitioner Slicings
# 1) MedComCorePatientGeneralPractitionerReferencedSORUnit: [DA] Praktiserende læges SOR-id på sundhedsinstistutionsniveau
# - min = 0
# - max = *
#
# + telecom - Shall contain value, system and use if these information are known.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + communication - A language which may be used to communicate with the patient about his or her health.
# + identifier - An identifier for this patient.
# * identifier Slicings
# 1) MedComCorePatientIdentifierCpr: Unique identification number for all citizens in Denmark, called civil person register (CPR-number).
# - min = 0
# - max = 1
#
# 2) MedComCorePatientIdentifierD_ecpr: An identifier intended for computation
# - min = 0
# - max = 1
#
# 3) MedComCorePatientIdentifierX_ecpr: An identifier intended for computation
# - min = 0
# - max = 1
#
# + address - Shall contain all known, relevant addresses of the patient
# + multipleBirthBoolean - Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
# + active - Whether this patient record is in active use. Many systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules. It is often used to filter patient lists to exclude inactive patients Deceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.
# + photo - Image of the patient.
# + birthDate - The date of birth for the individual.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + deceasedBoolean - Shall contain information if the patient is deceased and it is relevant in the given context
# + managingOrganization - Organization that is the custodian of the patient record. This can e.g. be the sender of a message or responsable for the patients treatment. One of these organizations will always be included in the bundle, why this element is not mandatory to include.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + multipleBirthInteger - Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
# + name - A name associated with the individual.
# * name Slicings
# 1) MedComCorePatientNameOfficial: [DA] Officielt navn, som det fremgår af CPR registeret
# - min = 1
# - max = 1
#
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + maritalStatus - This field contains a patient's most recent marital (civil) status.
@r4:ResourceDefinition {
    resourceType: "Patient",
    baseType: r4:DomainResource,
    profile: "http://medcomfhir.dk/ig/core/StructureDefinition/medcom-core-patient",
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.extension"
        },
        "gender": {
            name: "gender",
            dataType: MedComCorePatientGender,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.gender",
            valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender|4.0.1"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.modifierExtension"
        },
        "link": {
            name: "link",
            dataType: MedComCorePatientLink,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.link"
        },
        "language": {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "contact": {
            name: "contact",
            dataType: MedComCorePatientContact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.contact"
        },
        "deceasedDateTime": {
            name: "deceasedDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.deceased[x]"
        },
        "generalPractitioner": {
            name: "generalPractitioner",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.generalPractitioner"
        },
        "telecom": {
            name: "telecom",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.telecom"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.id"
        },
        "text": {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.text"
        },
        "communication": {
            name: "communication",
            dataType: MedComCorePatientCommunication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.communication"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.identifier"
        },
        "address": {
            name: "address",
            dataType: MedComCorePatientAddress,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.address"
        },
        "multipleBirthBoolean": {
            name: "multipleBirthBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.multipleBirth[x]"
        },
        "active": {
            name: "active",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.active"
        },
        "photo": {
            name: "photo",
            dataType: r4:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.photo"
        },
        "birthDate": {
            name: "birthDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.birthDate"
        },
        "contained": {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.contained"
        },
        "deceasedBoolean": {
            name: "deceasedBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.deceased[x]"
        },
        "managingOrganization": {
            name: "managingOrganization",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.managingOrganization"
        },
        "meta": {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.meta"
        },
        "multipleBirthInteger": {
            name: "multipleBirthInteger",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.multipleBirth[x]"
        },
        "name": {
            name: "name",
            dataType: r4:HumanName,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.name"
        },
        "implicitRules": {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.implicitRules"
        },
        "maritalStatus": {
            name: "maritalStatus",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.maritalStatus",
            valueSet: "http://hl7.dk/fhir/core/ValueSet/dk-marital-status"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type MedComCorePatient record {|
    *r4:DomainResource;

    RESOURCE_NAME_MEDCOMCOREPATIENT resourceType = RESOURCE_NAME_MEDCOMCOREPATIENT;

    r4:Extension[] extension?;
    MedComCorePatientGender gender?;
    r4:Extension[] modifierExtension?;
    MedComCorePatientLink[] link?;
    r4:code language?;
    MedComCorePatientContact[] contact?;
    r4:dateTime deceasedDateTime?;
    r4:Reference[] generalPractitioner?;
    MedcomMessagingContactpoint[] telecom?;
    string id?;
    r4:Narrative text?;
    MedComCorePatientCommunication[] communication?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Patient.identifier constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Patient.identifier constraint. This field must be an array containing at most one item."
        }
    }
    r4:Identifier[] identifier;
    MedComCorePatientAddress[] address?;
    boolean multipleBirthBoolean?;
    boolean active?;
    r4:Attachment[] photo?;
    r4:date birthDate?;
    r4:Resource[] contained?;
    boolean deceasedBoolean?;
    r4:Reference managingOrganization?;
    r4:Meta meta?;
    r4:integer multipleBirthInteger?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Patient.name constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Patient.name constraint. This field must be an array containing at most one item."
        }
    }
    r4:HumanName[] name;
    r4:uri implicitRules?;
    r4:CodeableConcept maritalStatus?;
    r4:Element...;
|};

# MedComCorePatientGender enum
public enum MedComCorePatientGender {
    CODE_GENDER_OTHER = "other",
    CODE_GENDER_FEMALE = "female",
    CODE_GENDER_MALE = "male",
    CODE_GENDER_UNKNOWN = "unknown"
}

# MedComCorePatientAddressUse enum
public enum MedComCorePatientAddressUse {
    CODE_USE_TEMP = "temp",
    CODE_USE_WORK = "work",
    CODE_USE_OLD = "old",
    CODE_USE_HOME = "home",
    CODE_USE_BILLING = "billing"
}

# MedComCorePatientAddressType enum
public enum MedComCorePatientAddressType {
    CODE_TYPE_POSTAL = "postal",
    CODE_TYPE_PHYSICAL = "physical",
    CODE_TYPE_BOTH = "both"
}

# FHIR MedComCorePatientIdentifierX_ecpr datatype record.
#
@r4:DataTypeDefinition {
    name: "MedComCorePatientIdentifierX_ecpr",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientIdentifierX_ecpr record {|
    *r4:Identifier;

|};

# FHIR MedComCorePatientNameOfficial datatype record.
#
# + given - Shall be present if the official given name of the patient is known, danish 'fornavn'.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Indicates the period of time when this name was valid for the named person.
# + prefix - Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
# + use - Identifies the purpose for this name.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.
# + family - Shall always be present, danish 'efternavn'.
# + suffix - Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
@r4:DataTypeDefinition {
    name: "MedComCorePatientNameOfficial",
    baseType: (),
    elements: {
        "given": {
            name: "given",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Shall be present if the official given name of the patient is known, danish 'fornavn'.",
            path: "Patient.name.given"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.name.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the period of time when this name was valid for the named person.",
            path: "Patient.name.period"
        },
        "prefix": {
            name: "prefix",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
            path: "Patient.name.prefix"
        },
        "use": {
            name: "use",
            dataType: MedComCorePatientNameUse,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the purpose for this name.",
            path: "Patient.name.use"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.name.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.",
            path: "Patient.name.text"
        },
        "family": {
            name: "family",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Shall always be present, danish 'efternavn'.",
            path: "Patient.name.family"
        },
        "suffix": {
            name: "suffix",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
            path: "Patient.name.suffix"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientNameOfficial record {|
    *r4:HumanName;

    string[] given?;
    r4:Extension[] extension?;
    r4:Period period?;
    string[] prefix?;
    MedComCorePatientNameUse use = "official";
    string id?;
    string text?;
    string family;
    string[] suffix?;
|};

# MedComCorePatientNameUse enum
public enum MedComCorePatientNameUse {
    CODE_USE_MAIDEN = "maiden",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_NICKNAME = "nickname",
    CODE_USE_OFFICIAL = "official",
    CODE_USE_ANONYMOUS = "anonymous"
}

# FHIR MedComCorePatientLink datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + other - The other patient resource that the link refers to.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of link between this patient resource and another patient resource.
@r4:DataTypeDefinition {
    name: "MedComCorePatientLink",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.link.extension"
        },
        "other": {
            name: "other",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The other patient resource that the link refers to.",
            path: "Patient.link.other"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.link.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.link.id"
        },
        "type": {
            name: "type",
            dataType: MedComCorePatientLinkType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of link between this patient resource and another patient resource.",
            path: "Patient.link.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientLink record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Reference other;
    r4:Extension[] modifierExtension?;
    string id?;
    MedComCorePatientLinkType 'type;
|};

# FHIR MedComCorePatientCommunication datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-EN' for England English.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + preferred - Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).
@r4:DataTypeDefinition {
    name: "MedComCorePatientCommunication",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.communication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.communication.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-EN' for England English.",
            path: "Patient.communication.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.communication.id"
        },
        "preferred": {
            name: "preferred",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
            path: "Patient.communication.preferred"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientCommunication record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept language;
    string id?;
    boolean preferred?;
|};

# FHIR MedComCorePatientContact datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The period during which this contact person or organization is valid to be contacted relating to this patient.
# + address - Address for the contact person.
# + gender - Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + organization - Organization on behalf of which the contact is acting or for which the contact is working.
# + name - A name associated with the contact person.
# + telecom - A contact detail for the person, e.g. a telephone number or an email address.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - The nature of the relationship between the patient and the contact person.
@r4:DataTypeDefinition {
    name: "MedComCorePatientContact",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.contact.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The period during which this contact person or organization is valid to be contacted relating to this patient.",
            path: "Patient.contact.period"
        },
        "address": {
            name: "address",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Address for the contact person.",
            path: "Patient.contact.address"
        },
        "gender": {
            name: "gender",
            dataType: MedComCorePatientContactGender,
            min: 0,
            max: 1,
            isArray: false,
            description: "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
            path: "Patient.contact.gender"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.contact.modifierExtension"
        },
        "organization": {
            name: "organization",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization on behalf of which the contact is acting or for which the contact is working.",
            path: "Patient.contact.organization"
        },
        "name": {
            name: "name",
            dataType: r4:HumanName,
            min: 0,
            max: 1,
            isArray: false,
            description: "A name associated with the contact person.",
            path: "Patient.contact.name"
        },
        "telecom": {
            name: "telecom",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A contact detail for the person, e.g. a telephone number or an email address.",
            path: "Patient.contact.telecom"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.contact.id"
        },
        "relationship": {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The nature of the relationship between the patient and the contact person.",
            path: "Patient.contact.relationship"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientContact record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:Address address?;
    MedComCorePatientContactGender gender?;
    r4:Extension[] modifierExtension?;
    r4:Reference organization?;
    r4:HumanName name?;
    r4:ContactPoint[] telecom?;
    string id?;
    r4:CodeableConcept[] relationship?;
|};

# FHIR MedComCorePatientIdentifierCpr datatype record.
#
@r4:DataTypeDefinition {
    name: "MedComCorePatientIdentifierCpr",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientIdentifierCpr record {|
    *r4:Identifier;

|};

# MedComCorePatientLinkType enum
public enum MedComCorePatientLinkType {
    CODE_TYPE_REFER = "refer",
    CODE_TYPE_REPLACES = "replaces",
    CODE_TYPE_SEEALSO = "seealso",
    CODE_TYPE_REPLACED_BY = "replaced-by"
}

# MedComCorePatientContactGender enum
public enum MedComCorePatientContactGender {
    CODE_GENDER_OTHER = "other",
    CODE_GENDER_FEMALE = "female",
    CODE_GENDER_MALE = "male",
    CODE_GENDER_UNKNOWN = "unknown"
}

# FHIR MedComCorePatientAddress datatype record.
#
# + country - Country - a nation as commonly understood or generally accepted.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period when address was/is in use.
# + city - Shall be present if the city is known
# + line - Shall contain the known information about the street name, number etc. to provide an exact address
# + use - The purpose of this address.
# + district - The name of the administrative area (county).
# + postalCode - Shall be present if the postal code is known
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + state - Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).
# + text - Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.
# + 'type - Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
@r4:DataTypeDefinition {
    name: "MedComCorePatientAddress",
    baseType: (),
    elements: {
        "country": {
            name: "country",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Country - a nation as commonly understood or generally accepted.",
            path: "Patient.address.country"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.address.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period when address was/is in use.",
            path: "Patient.address.period"
        },
        "city": {
            name: "city",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Shall be present if the city is known",
            path: "Patient.address.city"
        },
        "line": {
            name: "line",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Shall contain the known information about the street name, number etc. to provide an exact address",
            path: "Patient.address.line"
        },
        "use": {
            name: "use",
            dataType: MedComCorePatientAddressUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this address.",
            path: "Patient.address.use"
        },
        "district": {
            name: "district",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of the administrative area (county).",
            path: "Patient.address.district"
        },
        "postalCode": {
            name: "postalCode",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Shall be present if the postal code is known",
            path: "Patient.address.postalCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.address.id"
        },
        "state": {
            name: "state",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).",
            path: "Patient.address.state"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
            path: "Patient.address.text"
        },
        "type": {
            name: "type",
            dataType: MedComCorePatientAddressType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
            path: "Patient.address.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientAddress record {|
    *r4:Address;

    string country?;
    r4:Extension[] extension?;
    r4:Period period?;
    string city?;
    string[] line?;
    MedComCorePatientAddressUse use?;
    string district?;
    string postalCode?;
    string id?;
    string state?;
    string text?;
    MedComCorePatientAddressType 'type?;
|};

# FHIR MedComCorePatientGeneralPractitionerReferencedSORUnit datatype record.
#
# + reference - A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
# + identifier - An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + display - Plain text narrative that identifies the resource in addition to the resource reference.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).
@r4:DataTypeDefinition {
    name: "MedComCorePatientGeneralPractitionerReferencedSORUnit",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Patient.generalPractitioner.reference"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            path: "Patient.generalPractitioner.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.generalPractitioner.extension"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Patient.generalPractitioner.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.generalPractitioner.id"
        },
        "type": {
            name: "type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Patient.generalPractitioner.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientGeneralPractitionerReferencedSORUnit record {|
    *r4:Reference;

    string reference?;
    r4:Identifier identifier?;
    r4:Extension[] extension?;
    string display?;
    string id?;
    r4:uri 'type?;
|};

# FHIR MedComCorePatientIdentifierD_ecpr datatype record.
#
@r4:DataTypeDefinition {
    name: "MedComCorePatientIdentifierD_ecpr",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedComCorePatientIdentifierD_ecpr record {|
    *r4:Identifier;

|};

