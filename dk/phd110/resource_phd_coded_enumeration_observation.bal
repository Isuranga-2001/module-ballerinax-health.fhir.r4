// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_PHDCODEDENUMERATIONOBSERVATION = "http://hl7.org/fhir/uv/phd/StructureDefinition/PhdCodedEnumerationObservation";
public const RESOURCE_NAME_PHDCODEDENUMERATIONOBSERVATION = "Observation";

# FHIR PhdCodedEnumerationObservation resource record.
#
# + resourceType - The type of the resource describes
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.valueCodeableConcept is missing.
# + note - Comments about the observation or the results.
# + partOf - A larger event of which this particular Observation is a component or step. For example, an observation as part of a procedure.
# + extension - An Extension
# + code - Describes what was observed. Sometimes this is called the observation 'name'.
# + subject - The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + focus - The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record. The focus of an observation could also be an existing condition, an intervention, the subject's diet, another observation of the subject, or a body structure such as tumor or implanted device. An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.
# + language - The base language in which the resource is written.
# + valueCodeableConcept - The information determined as a result of making the observation, if the information has a simple value.
# + specimen - The specimen that was used when this observation was made.
# + derivedFrom - The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + issued - The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.
# + basedOn - A plan, proposal or order that is fulfilled in whole or in part by this event. For example, a MedicationRequest may require a patient to have laboratory test performed before it is dispensed.
# + identifier - A unique identifier assigned to this observation.
# * identifier Slicings
# 1) PhdCodedEnumerationObservationIdentifierConditionalCreate: Unique identifier of this measurement for a given patient and device
#       - min = 0
#       - max = 1
#
# + performer - Who was responsible for asserting the observed value as 'true'.
# + effectivePeriod - The time or time-period the observed value is asserted as being true. It is a time period if a Measure-Active-Period (duration) attribute is part of the metric measurement sent by the PHD. Otherwise it is the time stamp sent by the PHD or the time of reception by the PHG if the PHD sent no time stamp.
# + method - Indicates the mechanism used to perform the observation.
# + hasMember - This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.
# + encounter - The healthcare event (e.g. a patient and healthcare provider interaction) during which this observation is made.
# + bodySite - Indicates the site on the subject's body where the observation was made (i.e. the target site).
# + component - Some observations have multiple component observations. These component observations are expressed as separate code value pairs that share the same attributes. Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.
# * component Slicings
# 1) PhdCodedEnumerationObservationComponentRelativeTimeComponent: Relative time stamp of the measurement reported by the PHD.
#       - min = 0
#       - max = 1
#
# 2) PhdCodedEnumerationObservationComponentHiresRelativeTimeComponent: Hi-Resolution Relative time stamp of the measurement reported by the PHD.
#       - min = 0
#       - max = 1
#
# 3) PhdCodedEnumerationObservationComponentSupplementalTypesComponent: Supplemental Type: A further description of the measurement type.
#       - min = 0
#       - max = *
#
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + referenceRange - Guidance on how to interpret the value by comparison to a normal or recommended range. Multiple reference ranges are interpreted as an 'OR'. In other words, to represent two distinct target populations, two `referenceRange` elements would be used.
# + effectiveDateTime - The time or time-period the observed value is asserted as being true. It is a time period if a Measure-Active-Period (duration) attribute is part of the metric measurement sent by the PHD. Otherwise it is the time stamp sent by the PHD or the time of reception by the PHG if the PHD sent no time stamp.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + category - A code that classifies the general type of observation being made.
# + device - The device used to generate the observation data.
# + status - The status of the result value. Either 'final' or 'preliminary'
@r4:ResourceDefinition {
    resourceType: "Observation",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/uv/phd/StructureDefinition/PhdCodedEnumerationObservation",
    elements: {
        "dataAbsentReason" : {
            name: "dataAbsentReason",
            dataType: PhdCodedEnumerationObservationDataAbsentReason,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.dataAbsentReason",
            valueSet: "http://hl7.org/fhir/ValueSet/data-absent-reason"
        },
        "note" : {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.partOf"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            path: "Observation.extension"
        },
        "code" : {
            name: "code",
            dataType: PhdCodedEnumerationObservationCode,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.code",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-codes"
        },
        "subject" : {
            name: "subject",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.modifierExtension"
        },
        "focus" : {
            name: "focus",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.focus"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "valueCodeableConcept" : {
            name: "valueCodeableConcept",
            dataType: PhdCodedEnumerationObservationValue,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]"
        },
        "specimen" : {
            name: "specimen",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.specimen"
        },
        "derivedFrom" : {
            name: "derivedFrom",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.derivedFrom"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.text"
        },
        "issued" : {
            name: "issued",
            dataType: r4:instant,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.issued"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.identifier"
        },
        "performer" : {
            name: "performer",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.performer"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.effective[x]"
        },
        "method" : {
            name: "method",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.method",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-methods"
        },
        "hasMember" : {
            name: "hasMember",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.hasMember"
        },
        "encounter" : {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.encounter"
        },
        "bodySite" : {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.bodySite",
            valueSet: "http://hl7.org/fhir/ValueSet/body-site"
        },
        "component" : {
            name: "component",
            dataType: PhdCodedEnumerationObservationComponent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.component"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.contained"
        },
        "referenceRange" : {
            name: "referenceRange",
            dataType: PhdCodedEnumerationObservationReferenceRange,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.referenceRange"
        },
        "effectiveDateTime" : {
            name: "effectiveDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.effective[x]"
        },
        "interpretation" : {
            name: "interpretation",
            dataType: PhdCodedEnumerationObservationInterpretation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.interpretation",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-interpretation"
        },
        "meta" : {
            name: "meta",
            dataType: PhdCodedEnumerationObservationMeta,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.implicitRules"
        },
        "category" : {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.category",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-category"
        },
        "device" : {
            name: "device",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.device"
        },
        "status" : {
            name: "status",
            dataType: PhdCodedEnumerationObservationStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.status",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type PhdCodedEnumerationObservation record {|
    *r4:DomainResource;

    RESOURCE_NAME_PHDCODEDENUMERATIONOBSERVATION resourceType = RESOURCE_NAME_PHDCODEDENUMERATIONOBSERVATION;

    PhdCodedEnumerationObservationDataAbsentReason dataAbsentReason?;
    r4:Annotation[] note?;
    r4:Reference[] partOf?;
    @constraint:Array {

        maxLength: {
            value: 1,
            message: "Validation failed for $.Observation.extension constraint. This field must be an array containing at most one item."
        }
    }
    r4:Extension[] extension?;
    PhdCodedEnumerationObservationCode code;
    r4:Reference subject;
    r4:Extension[] modifierExtension?;
    r4:Reference[] focus?;
    r4:code language?;
    PhdCodedEnumerationObservationValue valueCodeableConcept?;
    r4:Reference specimen?;
    r4:Reference[] derivedFrom?;
    string id?;
    r4:Narrative text?;
    r4:instant issued?;
    r4:Reference[] basedOn?;
    r4:Identifier[] identifier?;
    r4:Reference[] performer?;
    r4:Period effectivePeriod;
    r4:CodeableConcept method?;
    r4:Reference[] hasMember?;
    r4:Reference encounter?;
    r4:CodeableConcept bodySite?;
    PhdCodedEnumerationObservationComponent[] component?;
    r4:Resource[] contained?;
    PhdCodedEnumerationObservationReferenceRange[] referenceRange?;
    r4:dateTime effectiveDateTime;
    PhdCodedEnumerationObservationInterpretation[] interpretation?;
    PhdCodedEnumerationObservationMeta meta;
    r4:uri implicitRules?;
    r4:CodeableConcept[] category?;
    r4:Reference device;
    PhdCodedEnumerationObservationStatus status;
    r4:Element ...;
|};

# FHIR PhdCodedEnumerationObservationComponentRelativeTimeComponent datatype record.
#
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationComponentRelativeTimeComponent",
    baseType: (),
    elements: {
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 0,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationComponentRelativeTimeComponent record {|
    *PhdCodedEnumerationObservationComponent;

    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:CodeableConcept[] interpretation?;
    r4:Extension[] modifierExtension?;
    string id?;
|};

# FHIR PhdCodedEnumerationObservationMetaSecurityPhdHtest datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationMetaSecurityPhdHtest",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.meta.security.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.meta.security.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.meta.security.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.meta.security.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.meta.security.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.meta.security.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.meta.security.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationMetaSecurityPhdHtest record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "HTEST";
    r4:uri system = "http://terminology.hl7.org/CodeSystem/v3-ActReason";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhdCodedEnumerationObservationDataAbsentReason datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationDataAbsentReason",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.dataAbsentReason.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.dataAbsentReason.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.dataAbsentReason.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.dataAbsentReason.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationDataAbsentReason record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Observation.dataAbsentReason.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Observation.dataAbsentReason.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhdCodedEnumerationObservationComponent datatype record.
#
# + valueBoolean - The information determined as a result of making the observation, if the information has a simple value.
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueTime - The information determined as a result of making the observation, if the information has a simple value.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + valueRange - The information determined as a result of making the observation, if the information has a simple value.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCodeableConcept - The information determined as a result of making the observation, if the information has a simple value.
# + valueRatio - The information determined as a result of making the observation, if the information has a simple value.
# + valueString - The information determined as a result of making the observation, if the information has a simple value.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + valueSampledData - The information determined as a result of making the observation, if the information has a simple value.
# + valuePeriod - The information determined as a result of making the observation, if the information has a simple value.
# + valueDateTime - The information determined as a result of making the observation, if the information has a simple value.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueInteger - The information determined as a result of making the observation, if the information has a simple value.
# + valueQuantity - The information determined as a result of making the observation, if the information has a simple value.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationComponent",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "valueTime": {
            name: "valueTime",
            dataType: r4:time,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "valueRange": {
            name: "valueRange",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "valueRatio": {
            name: "valueRatio",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "valueSampledData": {
            name: "valueSampledData",
            dataType: r4:SampledData,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        },
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The information determined as a result of making the observation, if the information has a simple value.",
            path: "Observation.component.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationComponent record {|
    *r4:BackboneElement;

    boolean valueBoolean?;
    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    r4:time valueTime?;
    r4:CodeableConcept code;
    r4:Range valueRange?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Ratio valueRatio?;
    string valueString?;
    r4:CodeableConcept[] interpretation?;
    r4:SampledData valueSampledData?;
    r4:Period valuePeriod?;
    r4:dateTime valueDateTime?;
    string id?;
    r4:integer valueInteger?;
    r4:Quantity valueQuantity?;
|};

# FHIR PhdCodedEnumerationObservationInterpretation datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationInterpretation",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.interpretation.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.interpretation.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.interpretation.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.interpretation.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationInterpretation record {|
    *r4:CodeableConcept;

    r4:Coding[] coding?;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhdCodedEnumerationObservationComponentHiresRelativeTimeComponent datatype record.
#
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationComponentHiresRelativeTimeComponent",
    baseType: (),
    elements: {
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 0,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationComponentHiresRelativeTimeComponent record {|
    *PhdCodedEnumerationObservationComponent;

    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:CodeableConcept[] interpretation?;
    r4:Extension[] modifierExtension?;
    string id?;
|};

# FHIR PhdCodedEnumerationObservationIdentifierConditionalCreate datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationIdentifierConditionalCreate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Observation.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 0,
            max: 0,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Observation.identifier.system"
        },
        "use": {
            name: "use",
            dataType: PhdCodedEnumerationObservationIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Observation.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Observation.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.identifier.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 0,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Observation.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Observation.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationIdentifierConditionalCreate record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system?;
    PhdCodedEnumerationObservationIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    r4:CodeableConcept 'type?;
    string value;
|};

# FHIR PhdCodedEnumerationObservationInterpretationCodingMsmtStatusInterpretation datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationInterpretationCodingMsmtStatusInterpretation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.interpretation.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.interpretation.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.interpretation.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.interpretation.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.interpretation.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.interpretation.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.interpretation.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationInterpretationCodingMsmtStatusInterpretation record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "http://hl7.org/fhir/uv/pocd/CodeSystem/measurement-status";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhdCodedEnumerationObservationMetaProfilePhdProfile datatype record.
#
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationMetaProfilePhdProfile",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationMetaProfilePhdProfile record {|

|};

# FHIR PhdCodedEnumerationObservationCodeCodingMDCType datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationCodeCodingMDCType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.code.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.code.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.code.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.code.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.code.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.code.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.code.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationCodeCodingMDCType record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhdCodedEnumerationObservationComponentSupplementalTypesComponent datatype record.
#
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationComponentSupplementalTypesComponent",
    baseType: (),
    elements: {
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 0,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationComponentSupplementalTypesComponent record {|
    *PhdCodedEnumerationObservationComponent;

    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:CodeableConcept[] interpretation?;
    r4:Extension[] modifierExtension?;
    string id?;
|};

# FHIR PhdCodedEnumerationObservationReferenceRange datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + high - The value of the high bound of the reference range. The high bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the high bound is omitted, it is assumed to be meaningless (e.g. reference range is >= 2.3).
# + low - The value of the low bound of the reference range. The low bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the low bound is omitted, it is assumed to be meaningless (e.g. reference range is <=2.3).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + appliesTo - Codes to indicate the target population this reference range applies to. For example, a reference range may be based on the normal population or a particular sex or race. Multiple `appliesTo` are interpreted as an 'AND' of the target populations. For example, to represent a target population of African American females, both a code of female and a code for African American would be used.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation. An example would be a reference value of 'Negative' or a list or table of 'normals'.
# + 'type - Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.
# + age - The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationReferenceRange",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.referenceRange.extension"
        },
        "high": {
            name: "high",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the high bound of the reference range. The high bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the high bound is omitted, it is assumed to be meaningless (e.g. reference range is >= 2.3).",
            path: "Observation.referenceRange.high"
        },
        "low": {
            name: "low",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the low bound of the reference range. The low bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the low bound is omitted, it is assumed to be meaningless (e.g. reference range is <=2.3).",
            path: "Observation.referenceRange.low"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.referenceRange.modifierExtension"
        },
        "appliesTo": {
            name: "appliesTo",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Codes to indicate the target population this reference range applies to. For example, a reference range may be based on the normal population or a particular sex or race. Multiple `appliesTo` are interpreted as an 'AND' of the target populations. For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
            path: "Observation.referenceRange.appliesTo"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.referenceRange.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation. An example would be a reference value of 'Negative' or a list or table of 'normals'.",
            path: "Observation.referenceRange.text"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
            path: "Observation.referenceRange.type"
        },
        "age": {
            name: "age",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
            path: "Observation.referenceRange.age"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationReferenceRange record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Quantity high?;
    r4:Quantity low?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept[] appliesTo?;
    string id?;
    string text?;
    r4:CodeableConcept 'type?;
    r4:Range age?;
|};

# FHIR PhdCodedEnumerationObservationCodeCodingLoincCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationCodeCodingLoincCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.code.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.code.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.code.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.code.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.code.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.code.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.code.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationCodeCodingLoincCoding record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "http://loinc.org";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhdCodedEnumerationObservationDataAbsentReasonCodingFhirDefault datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationDataAbsentReasonCodingFhirDefault",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.dataAbsentReason.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.dataAbsentReason.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.dataAbsentReason.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.dataAbsentReason.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.dataAbsentReason.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.dataAbsentReason.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.dataAbsentReason.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationDataAbsentReasonCodingFhirDefault record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "http://terminology.hl7.org/CodeSystem/data-absent-reason";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhdCodedEnumerationObservationCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.code.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.code.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.code.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.code.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationCode record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Observation.code.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Observation.code.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhdCodedEnumerationObservationValue datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationValue",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.value[x].coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.value[x].extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.value[x].id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.value[x].text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationValue record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Observation.value[x].coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Observation.value[x].coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhdCodedEnumerationObservationMeta datatype record.
#
# + lastUpdated - When the resource last changed - e.g. when the version changed.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + security - Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
# + versionId - The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.
# + profile - A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.
# + tag - Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
@r4:DataTypeDefinition {
    name: "PhdCodedEnumerationObservationMeta",
    baseType: (),
    elements: {
        "lastUpdated": {
            name: "lastUpdated",
            dataType: r4:instant,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the resource last changed - e.g. when the version changed.",
            path: "Observation.meta.lastUpdated"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.meta.extension"
        },
        "security": {
            name: "security",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            path: "Observation.meta.security"
        },
        "versionId": {
            name: "versionId",
            dataType: r4:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            path: "Observation.meta.versionId"
        },
        "profile": {
            name: "profile",
            dataType: r4:canonical,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).",
            path: "Observation.meta.profile"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.meta.id"
        },
        "source": {
            name: "source",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            path: "Observation.meta.source"
        },
        "tag": {
            name: "tag",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            path: "Observation.meta.tag"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhdCodedEnumerationObservationMeta record {|
    *r4:Meta;

    r4:instant lastUpdated?;
    r4:Extension[] extension?;
    r4:Coding[] security?;
    r4:id versionId?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Observation.meta.profile constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Observation.meta.profile constraint. This field must be an array containing at most one item."
        }
    }
    r4:canonical[] profile;
    string id?;
    r4:uri 'source?;
    r4:Coding[] tag?;
|};

# PhdCodedEnumerationObservationStatus enum
public enum PhdCodedEnumerationObservationStatus {
   CODE_STATUS_AMENDED = "amended",
   CODE_STATUS_FINAL = "final",
   CODE_STATUS_REGISTERED = "registered",
   CODE_STATUS_PRELIMINARY = "preliminary"
}

# PhdCodedEnumerationObservationIdentifierUse enum
public enum PhdCodedEnumerationObservationIdentifierUse {
   CODE_USE_SECONDARY = "secondary",
   CODE_USE_TEMP = "temp",
   CODE_USE_USUAL = "usual",
   CODE_USE_OLD = "old",
   CODE_USE_OFFICIAL = "official"
}

