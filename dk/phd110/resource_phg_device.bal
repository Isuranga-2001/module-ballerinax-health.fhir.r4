// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_PHGDEVICE = "http://hl7.org/fhir/uv/phd/StructureDefinition/PhgDevice";
public const RESOURCE_NAME_PHGDEVICE = "Device";

# FHIR PhgDevice resource record.
#
# + resourceType - The type of the resource describes
# + note - Descriptive information, usage information or implantation information that is not captured in an existing element.
# + parent - The parent device.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + distinctIdentifier - The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product.
# + 'type - The kind or type of device.
# + deviceName - This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device. This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
# + manufacturer - The manufacturer name.
# + statusReason - Reason for the dtatus of the Device availability.
# + patient - Patient information, If the device is affixed to a person.
# + safety - Provides additional safety characteristics about a medical device. For example devices containing latex.
# + contact - Contact details for an organization or a particular human that is responsible for the device.
# + property - The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.
# * property Slicings
# 1) PhgDevicePropertyCodedListProperties: The device properties represented by a list of codes such as the list of certified PHD or H-FS interfaces
# - min = 0
# - max = *
#
# 2) PhgDevicePropertyQuantitiesProperty: The PHG properties represented by quantities such as time synchronization accuracy
# - min = 0
# - max = *
#
# 3) PhgDevicePropertyBitProperties: Properties reported in BITs fields
# - min = 0
# - max = *
#
# + manufactureDate - The date and time when the device was manufactured.
# + definition - The reference to the definition for the device.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + expirationDate - The date and time beyond which this device is no longer valid or should not be used (if applicable).
# + owner - An organization that is responsible for the provision and ongoing maintenance of the device.
# + identifier - The assigned unique identification of the device that is semantically meaningful outside of the FHIR resource context. An example would be the IEEE EUI-64 System-Id or transport address. For PHDs the systemIdentifier is required and the transportAddressIdentifier is highly recommended as this is what most end users see and can obtain from the device itself or device packaging.
# * identifier Slicings
# 1) PhgDeviceIdentifierBtmacAddressIdentifier: Bluetooth MAC Transport address identifier
# - min = 0
# - max = 1
#
# 2) PhgDeviceIdentifierSystemIdIdentifier: System Id identifier
# - min = 1
# - max = 1
#
# 3) PhgDeviceIdentifierMacAddressIdentifier: MAC Transport address identifier
# - min = 0
# - max = 1
#
# + serialNumber - The serial number assigned by the organization when the device was manufactured.
# + lotNumber - Lot number assigned by the manufacturer.
# + 'version - The actual design of the device or software version running on the device.
# + url - A network address on which the device may be contacted directly.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + udiCarrier - Unique device identifier (UDI) assigned to device label or package. Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + specialization - The capabilities supported on a device, the standards to which the device conforms for a particular purpose, and used for the communication.
# + location - The place where the device can be found.
# + modelNumber - The model number for the device.
# + partNumber - The part number of the device.
# + status - Status of the Device availability.
@r4:ResourceDefinition {
    resourceType: "Device",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/uv/phd/StructureDefinition/PhgDevice",
    elements: {
        "note": {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.note"
        },
        "parent": {
            name: "parent",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.parent"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "distinctIdentifier": {
            name: "distinctIdentifier",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.distinctIdentifier"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceType,
            min: 1,
            max: 1,
            isArray: false,
            path: "Device.type",
            valueSet: "http://hl7.org/fhir/ValueSet/device-type"
        },
        "deviceName": {
            name: "deviceName",
            dataType: PhgDeviceDeviceName,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.deviceName"
        },
        "manufacturer": {
            name: "manufacturer",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufacturer"
        },
        "statusReason": {
            name: "statusReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.statusReason",
            valueSet: "http://hl7.org/fhir/ValueSet/device-status-reason"
        },
        "patient": {
            name: "patient",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.patient"
        },
        "safety": {
            name: "safety",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.safety"
        },
        "contact": {
            name: "contact",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contact"
        },
        "property": {
            name: "property",
            dataType: PhgDeviceProperty,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.property"
        },
        "manufactureDate": {
            name: "manufactureDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufactureDate"
        },
        "definition": {
            name: "definition",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.definition"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.id"
        },
        "text": {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.text"
        },
        "expirationDate": {
            name: "expirationDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.expirationDate"
        },
        "owner": {
            name: "owner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.owner"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.identifier"
        },
        "serialNumber": {
            name: "serialNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.serialNumber"
        },
        "lotNumber": {
            name: "lotNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.lotNumber"
        },
        "version": {
            name: "version",
            dataType: PhgDeviceVersion,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.version"
        },
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.url"
        },
        "contained": {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contained"
        },
        "udiCarrier": {
            name: "udiCarrier",
            dataType: PhgDeviceUdiCarrier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.udiCarrier"
        },
        "meta": {
            name: "meta",
            dataType: PhgDeviceMeta,
            min: 1,
            max: 1,
            isArray: false,
            path: "Device.meta"
        },
        "implicitRules": {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.implicitRules"
        },
        "specialization": {
            name: "specialization",
            dataType: PhgDeviceSpecialization,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.specialization"
        },
        "location": {
            name: "location",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.location"
        },
        "modelNumber": {
            name: "modelNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.modelNumber"
        },
        "partNumber": {
            name: "partNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.partNumber"
        },
        "status": {
            name: "status",
            dataType: PhgDeviceStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.status",
            valueSet: "http://hl7.org/fhir/ValueSet/device-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type PhgDevice record {|
    *r4:DomainResource;

    RESOURCE_NAME_PHGDEVICE resourceType = RESOURCE_NAME_PHGDEVICE;

    r4:Annotation[] note?;
    r4:Reference parent?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:code language?;
    string distinctIdentifier?;
    PhgDeviceType 'type;
    PhgDeviceDeviceName[] deviceName?;
    string manufacturer?;
    r4:CodeableConcept[] statusReason?;
    r4:Reference patient?;
    r4:CodeableConcept[] safety?;
    r4:ContactPoint[] contact?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceProperty[] property;
    r4:dateTime manufactureDate?;
    r4:Reference definition?;
    string id?;
    r4:Narrative text?;
    r4:dateTime expirationDate?;
    r4:Reference owner?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier constraint. This field must be an array containing at most one item."
        }
    }
    r4:Identifier[] identifier;
    string serialNumber?;
    string lotNumber?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.version constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.version constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceVersion[] 'version;
    r4:uri url?;
    r4:Resource[] contained?;
    PhgDeviceUdiCarrier[] udiCarrier?;
    PhgDeviceMeta meta;
    r4:uri implicitRules?;
    PhgDeviceSpecialization[] specialization?;
    r4:Reference location?;
    string modelNumber?;
    string partNumber?;
    PhgDeviceStatus status?;
    r4:Element...;
|};

# FHIR PhgDeviceIdentifierSystemIdIdentifier datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Identifies the system as an IEEE EUI.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The System id from the System-Id attribute as an 8-byte HEX string where each byte is separated by dashes, for example FE-ED-AB-EE-DE-AD-77-C3.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierSystemIdIdentifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Device.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the system as an IEEE EUI.",
            path: "Device.identifier.system"
        },
        "use": {
            name: "use",
            dataType: PhgDeviceIdentifierUseOne,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Device.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Device.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.id"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceIdentifierTypeOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Device.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The System id from the System-Id attribute as an 8-byte HEX string where each byte is separated by dashes, for example FE-ED-AB-EE-DE-AD-77-C3.",
            path: "Device.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierSystemIdIdentifier record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system = "urn:oid:1.2.840.10004.1.1.1.0.0.1.0.0.1.2680";
    PhgDeviceIdentifierUseOne use?;
    r4:Reference assigner?;
    string id?;
    PhgDeviceIdentifierTypeOne 'type;
    string value;
|};

# FHIR PhgDeviceSpecialization datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + systemType - The standard that is used to operate and communicate.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the standard that is used to operate and communicate.
@r4:DataTypeDefinition {
    name: "PhgDeviceSpecialization",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.specialization.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.specialization.modifierExtension"
        },
        "systemType": {
            name: "systemType",
            dataType: PhgDeviceSpecializationSystemType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The standard that is used to operate and communicate.",
            path: "Device.specialization.systemType"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.specialization.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the standard that is used to operate and communicate.",
            path: "Device.specialization.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceSpecialization record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    PhgDeviceSpecializationSystemType systemType;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceIdentifierTypeCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierTypeCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Device.identifier.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.identifier.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.identifier.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.identifier.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.identifier.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierTypeCoding record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "BTMAC";
    r4:uri system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceProperty datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCode - Property value as a code, e.g., NTP4 (synced to NTP).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Code that specifies the property DeviceDefinitionPropetyCode (Extensible).
# + valueQuantity - Property value as a quantity.
@r4:DataTypeDefinition {
    name: "PhgDeviceProperty",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "valueCode": {
            name: "valueCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Property value as a code, e.g., NTP4 (synced to NTP).",
            path: "Device.property.valueCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
            path: "Device.property.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Property value as a quantity.",
            path: "Device.property.valueQuantity"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceProperty record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept[] valueCode?;
    string id?;
    r4:CodeableConcept 'type;
    r4:Quantity[] valueQuantity?;
|};

# FHIR PhgDeviceSpecializationSystemType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + MDCType - A reference to a code defined by a terminology system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDeviceSpecializationSystemType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.specialization.systemType.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.specialization.systemType.extension"
        },
        "MDCType": {
            name: "MDCType",
            dataType: PhgDeviceSpecializationSystemTypeCodingMDCType,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.specialization.systemType.coding"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.specialization.systemType.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.specialization.systemType.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceSpecializationSystemType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.specialization.systemType.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.specialization.systemType.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.specialization.systemType.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.specialization.systemType.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceSpecializationSystemTypeCodingMDCType[] MDCType;
    string id?;
    string text?;
|};

# PhgDeviceStatus enum
public enum PhgDeviceStatus {
    CODE_STATUS_INACTIVE = "inactive",
    CODE_STATUS_ACTIVE = "active",
    CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
    CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR PhgDevicePropertyType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - It is recommended to display at least the MDC reference identifier for the code
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDevicePropertyTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.property.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "It is recommended to display at least the MDC reference identifier for the code",
            path: "Device.property.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyTypeCoding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDeviceDeviceName datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - The name of the device.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of deviceName. UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.
@r4:DataTypeDefinition {
    name: "PhgDeviceDeviceName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.deviceName.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.deviceName.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The name of the device.",
            path: "Device.deviceName.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.deviceName.id"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceDeviceNameType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of deviceName. UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
            path: "Device.deviceName.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceDeviceName record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string name;
    string id?;
    PhgDeviceDeviceNameType 'type;
|};

# FHIR PhgDeviceIdentifierTypeOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierTypeOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDeviceIdentifierTypeCodingOne,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.identifier.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.identifier.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierTypeOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceIdentifierTypeCodingOne[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDevicePropertyValueCodeCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - One of the Continua interface certification codes
# + system - Either the http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaPHD or http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaHFS or urn:iso:std:iso:11073:10101 code systems
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyValueCodeCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.valueCode.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "One of the Continua interface certification codes",
            path: "Device.property.valueCode.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Either the http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaPHD or http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaHFS or urn:iso:std:iso:11073:10101 code systems",
            path: "Device.property.valueCode.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.property.valueCode.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.property.valueCode.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.valueCode.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.property.valueCode.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyValueCodeCoding record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system;
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceVersion datatype record.
#
# + component - A single component of the device version.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of the device version.
# + value - The version text.
@r4:DataTypeDefinition {
    name: "PhgDeviceVersion",
    baseType: (),
    elements: {
        "component": {
            name: "component",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "A single component of the device version.",
            path: "Device.version.component"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.version.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.version.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.version.id"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceVersionType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of the device version.",
            path: "Device.version.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The version text.",
            path: "Device.version.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceVersion record {|
    *r4:BackboneElement;

    r4:Identifier component?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    PhgDeviceVersionType 'type;
    string value;
|};

# FHIR PhgDeviceUdiCarrier datatype record.
#
# + entryType - A coded entry to indicate how the data was entered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + deviceIdentifier - The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.
# + carrierHRF - The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.
# + jurisdiction - The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/fda-udi.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + carrierAIDC - The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.
# + issuer - Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include : 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-dI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di.
@r4:DataTypeDefinition {
    name: "PhgDeviceUdiCarrier",
    baseType: (),
    elements: {
        "entryType": {
            name: "entryType",
            dataType: PhgDeviceUdiCarrierEntryType,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded entry to indicate how the data was entered.",
            path: "Device.udiCarrier.entryType"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.udiCarrier.extension"
        },
        "deviceIdentifier": {
            name: "deviceIdentifier",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
            path: "Device.udiCarrier.deviceIdentifier"
        },
        "carrierHRF": {
            name: "carrierHRF",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
            path: "Device.udiCarrier.carrierHRF"
        },
        "jurisdiction": {
            name: "jurisdiction",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/fda-udi.",
            path: "Device.udiCarrier.jurisdiction"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.udiCarrier.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.udiCarrier.id"
        },
        "carrierAIDC": {
            name: "carrierAIDC",
            dataType: r4:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
            path: "Device.udiCarrier.carrierAIDC"
        },
        "issuer": {
            name: "issuer",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include : 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-dI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di.",
            path: "Device.udiCarrier.issuer"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceUdiCarrier record {|
    *r4:BackboneElement;

    PhgDeviceUdiCarrierEntryType entryType?;
    r4:Extension[] extension?;
    string deviceIdentifier?;
    string carrierHRF?;
    r4:uri jurisdiction?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:base64Binary carrierAIDC?;
    r4:uri issuer?;
|};

# PhgDevicePropertyValueQuantityComparator enum
public enum PhgDevicePropertyValueQuantityComparator {
    CODE_COMPARATOR_LESS_THAN_OR_EQUAL = "<=",
    CODE_COMPARATOR_LESS_THAN = "<",
    CODE_COMPARATOR_GREATER_THAN = ">",
    CODE_COMPARATOR_GREATER_THAN_OR_EQUAL = ">="
}

# FHIR PhgDevicePropertyTypeOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - It is recommended to display at least the MDC reference identifier for the code
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyTypeOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDevicePropertyTypeCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.property.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "It is recommended to display at least the MDC reference identifier for the code",
            path: "Device.property.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyTypeOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyTypeCodingOne[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDeviceIdentifierBtmacAddressIdentifier datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The Bluetooth MAC as an EUI-48 such as 00-E5-DE-AD-77-C3.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierBtmacAddressIdentifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Device.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Device.identifier.system"
        },
        "use": {
            name: "use",
            dataType: PhgDeviceIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Device.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Device.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.id"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceIdentifierType,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Device.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The Bluetooth MAC as an EUI-48 such as 00-E5-DE-AD-77-C3.",
            path: "Device.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierBtmacAddressIdentifier record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system = "http://hl7.org/fhir/sid/eui-48/bluetooth";
    PhgDeviceIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    PhgDeviceIdentifierType 'type;
    string value;
|};

# FHIR PhgDeviceIdentifierTypeTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierTypeTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDeviceIdentifierTypeCodingTwo,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.identifier.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.identifier.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierTypeTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceIdentifierTypeCodingTwo[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDevicePropertyValueQuantity datatype record.
#
# + comparator - How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is '<' , then the real value is < stated value.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + unit - A human-readable form of the unit.
# + code - The UCUM code (for microseconds it is 'us')
# + system - The unit code shall use the UCUM system
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - The value. All the time fields are scaled to microseconds
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyValueQuantity",
    baseType: (),
    elements: {
        "comparator": {
            name: "comparator",
            dataType: PhgDevicePropertyValueQuantityComparator,
            min: 0,
            max: 1,
            isArray: false,
            description: "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is '<' , then the real value is < stated value.",
            path: "Device.property.valueQuantity.comparator"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.valueQuantity.extension"
        },
        "unit": {
            name: "unit",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable form of the unit.",
            path: "Device.property.valueQuantity.unit"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "The UCUM code (for microseconds it is 'us')",
            path: "Device.property.valueQuantity.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The unit code shall use the UCUM system",
            path: "Device.property.valueQuantity.system"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.valueQuantity.id"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "The value. All the time fields are scaled to microseconds",
            path: "Device.property.valueQuantity.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyValueQuantity record {|
    *r4:Quantity;

    PhgDevicePropertyValueQuantityComparator comparator?;
    r4:Extension[] extension?;
    string unit?;
    r4:code code = "us";
    r4:uri system = "http://unitsofmeasure.org";
    string id?;
    decimal value;
|};

# PhgDeviceIdentifierUseOne enum
public enum PhgDeviceIdentifierUseOne {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR PhgDevicePropertyTypeCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The MDC code representing the property
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyTypeCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "The MDC code representing the property",
            path: "Device.property.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.property.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.property.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.property.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.property.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyTypeCoding record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDevicePropertyBitProperties datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCode - Property value as a code, e.g., NTP4 (synced to NTP).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - One of the capabilities reported in the Mds-Time-Info.mds-time-caps-state or Reg-Cert-Data-List.regulation-status field.
# + valueQuantity - Property value as a quantity.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyBitProperties",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "valueCode": {
            name: "valueCode",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: true,
            description: "Property value as a code, e.g., NTP4 (synced to NTP).",
            path: "Device.property.valueCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: PhgDevicePropertyTypeTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "One of the capabilities reported in the Mds-Time-Info.mds-time-caps-state or Reg-Cert-Data-List.regulation-status field.",
            path: "Device.property.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 0,
            isArray: true,
            description: "Property value as a quantity.",
            path: "Device.property.valueQuantity"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyBitProperties record {|
    *PhgDeviceProperty;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode constraint. This field must be an array containing at most one item."
        }
    }
    r4:CodeableConcept[] valueCode;
    string id?;
    PhgDevicePropertyTypeTwo 'type;
    r4:Quantity[] valueQuantity?;
|};

# FHIR PhgDeviceMeta datatype record.
#
# + lastUpdated - When the resource last changed - e.g. when the version changed.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + security - Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
# + versionId - The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.
# + profile - A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.
# + tag - Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
@r4:DataTypeDefinition {
    name: "PhgDeviceMeta",
    baseType: (),
    elements: {
        "lastUpdated": {
            name: "lastUpdated",
            dataType: r4:instant,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the resource last changed - e.g. when the version changed.",
            path: "Device.meta.lastUpdated"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.meta.extension"
        },
        "security": {
            name: "security",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            path: "Device.meta.security"
        },
        "versionId": {
            name: "versionId",
            dataType: r4:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            path: "Device.meta.versionId"
        },
        "profile": {
            name: "profile",
            dataType: r4:canonical,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).",
            path: "Device.meta.profile"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.meta.id"
        },
        "source": {
            name: "source",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            path: "Device.meta.source"
        },
        "tag": {
            name: "tag",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            path: "Device.meta.tag"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceMeta record {|
    *r4:Meta;

    r4:instant lastUpdated?;
    r4:Extension[] extension?;
    r4:Coding[] security?;
    r4:id versionId?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.meta.profile constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.meta.profile constraint. This field must be an array containing at most one item."
        }
    }
    r4:canonical[] profile;
    string id?;
    r4:uri 'source?;
    r4:Coding[] tag?;
|};

# FHIR PhgDeviceIdentifierTypeCodingTwo datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierTypeCodingTwo",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Device.identifier.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.identifier.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.identifier.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.identifier.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.identifier.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierTypeCodingTwo record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "ETHMAC";
    r4:uri system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human readable display descrbing the meaning of the code.
@r4:DataTypeDefinition {
    name: "PhgDeviceType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human readable display descrbing the meaning of the code.",
            path: "Device.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDevicePropertyTypeCodingTwo datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The ASN1 code made from the code and the Mder bit position
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyTypeCodingTwo",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "The ASN1 code made from the code and the Mder bit position",
            path: "Device.property.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.property.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.property.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.property.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.property.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyTypeCodingTwo record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "http://hl7.org/fhir/uv/phd/CodeSystem/ASN1ToHL7";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceTypeCodingMDCType datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The code for a PHG indicating that this unit is a personal health device
# + system - This value identifies the IEEE 11073 10101 coding system
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceTypeCodingMDCType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "The code for a PHG indicating that this unit is a personal health device",
            path: "Device.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "This value identifies the IEEE 11073 10101 coding system",
            path: "Device.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceTypeCodingMDCType record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "531981";
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceIdentifierMacAddressIdentifier datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The MAC as an EUI-48 such as 00-E5-DE-AD-77-C8.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierMacAddressIdentifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Device.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Device.identifier.system"
        },
        "use": {
            name: "use",
            dataType: PhgDeviceIdentifierUseTwo,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Device.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Device.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.id"
        },
        "type": {
            name: "type",
            dataType: PhgDeviceIdentifierTypeTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Device.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The MAC as an EUI-48 such as 00-E5-DE-AD-77-C8.",
            path: "Device.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierMacAddressIdentifier record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system = "http://hl7.org/fhir/sid/eui-48/ethernet";
    PhgDeviceIdentifierUseTwo use?;
    r4:Reference assigner?;
    string id?;
    PhgDeviceIdentifierTypeTwo 'type;
    string value;
|};

# PhgDeviceUdiCarrierEntryType enum
public enum PhgDeviceUdiCarrierEntryType {
    CODE_ENTRYTYPE_RFID = "rfid",
    CODE_ENTRYTYPE_MANUAL = "manual",
    CODE_ENTRYTYPE_BARCODE = "barcode"
}

# FHIR PhgDevicePropertyCodedListProperties datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCode - Property value as a code, e.g., NTP4 (synced to NTP).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Code that specifies the property DeviceDefinitionPropetyCode (Extensible).
# + valueQuantity - Property value as a quantity.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyCodedListProperties",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "valueCode": {
            name: "valueCode",
            dataType: PhgDevicePropertyValueCode,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Property value as a code, e.g., NTP4 (synced to NTP).",
            path: "Device.property.valueCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: PhgDevicePropertyType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
            path: "Device.property.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 0,
            isArray: true,
            description: "Property value as a quantity.",
            path: "Device.property.valueQuantity"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyCodedListProperties record {|
    *PhgDeviceProperty;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyValueCode[] valueCode;
    string id?;
    PhgDevicePropertyType 'type;
    r4:Quantity[] valueQuantity?;
|};

# FHIR PhgDevicePropertyValueCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyValueCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDevicePropertyValueCodeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.property.valueCode.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.valueCode.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.valueCode.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.property.valueCode.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyValueCode record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueCode.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyValueCodeCoding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR PhgDeviceVersionTypeCodingMDCType datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceVersionTypeCodingMDCType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.version.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Device.version.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.version.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.version.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.version.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.version.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.version.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceVersionTypeCodingMDCType record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceVersionType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + MDCType - A reference to a code defined by a terminology system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDeviceVersionType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.version.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.version.type.extension"
        },
        "MDCType": {
            name: "MDCType",
            dataType: PhgDeviceVersionTypeCodingMDCType,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.version.type.coding"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.version.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.version.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceVersionType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.version.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.version.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding[] coding;
    r4:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.version.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.version.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceVersionTypeCodingMDCType[] MDCType;
    string id?;
    string text?;
|};

# PhgDeviceIdentifierUseTwo enum
public enum PhgDeviceIdentifierUseTwo {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR PhgDeviceIdentifierType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDeviceIdentifierTypeCoding,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.identifier.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Device.identifier.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDeviceIdentifierTypeCoding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# PhgDeviceIdentifierUse enum
public enum PhgDeviceIdentifierUse {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR PhgDevicePropertyQuantitiesProperty datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCode - Property value as a code, e.g., NTP4 (synced to NTP).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Code that specifies the property DeviceDefinitionPropetyCode (Extensible).
# + valueQuantity - The value of the reported quantity.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyQuantitiesProperty",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "valueCode": {
            name: "valueCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 0,
            isArray: true,
            description: "Property value as a code, e.g., NTP4 (synced to NTP).",
            path: "Device.property.valueCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: PhgDevicePropertyTypeOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
            path: "Device.property.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: PhgDevicePropertyValueQuantity,
            min: 1,
            max: 1,
            isArray: true,
            description: "The value of the reported quantity.",
            path: "Device.property.valueQuantity"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyQuantitiesProperty record {|
    *PhgDeviceProperty;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept[] valueCode?;
    string id?;
    PhgDevicePropertyTypeOne 'type;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueQuantity constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.valueQuantity constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyValueQuantity[] valueQuantity;
|};

# FHIR PhgDeviceMetaProfilePhdProfile datatype record.
#
@r4:DataTypeDefinition {
    name: "PhgDeviceMetaProfilePhdProfile",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceMetaProfilePhdProfile record {|

|};

# FHIR PhgDeviceIdentifierTypeCodingOne datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceIdentifierTypeCodingOne",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.identifier.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Device.identifier.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.identifier.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.identifier.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.identifier.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.identifier.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.identifier.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceIdentifierTypeCodingOne record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "SYSID";
    r4:uri system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# PhgDeviceDeviceNameType enum
public enum PhgDeviceDeviceNameType {
    CODE_TYPE_UDI_LABEL_NAME = "udi-label-name",
    CODE_TYPE_OTHER = "other",
    CODE_TYPE_MANUFACTURER_NAME = "manufacturer-name",
    CODE_TYPE_MODEL_NAME = "model-name",
    CODE_TYPE_USER_FRIENDLY_NAME = "user-friendly-name",
    CODE_TYPE_PATIENT_REPORTED_NAME = "patient-reported-name"
}

# FHIR PhgDevicePropertyTypeCodingOne datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The MDC code representing the property
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyTypeCodingOne",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "The MDC code representing the property",
            path: "Device.property.type.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.property.type.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.property.type.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.property.type.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.property.type.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyTypeCodingOne record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDeviceSpecializationSystemTypeCodingMDCType datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "PhgDeviceSpecializationSystemTypeCodingMDCType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.specialization.systemType.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Device.specialization.systemType.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Device.specialization.systemType.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Device.specialization.systemType.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Device.specialization.systemType.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.specialization.systemType.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Device.specialization.systemType.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDeviceSpecializationSystemTypeCodingMDCType record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code;
    r4:uri system = "urn:iso:std:iso:11073:10101";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR PhgDevicePropertyTypeTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - It is recommended to display at least the ASN1 name for the given bit meaning
@r4:DataTypeDefinition {
    name: "PhgDevicePropertyTypeTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PhgDevicePropertyTypeCodingTwo,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Device.property.type.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.type.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.type.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "It is recommended to display at least the ASN1 name for the given bit meaning",
            path: "Device.property.type.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PhgDevicePropertyTypeTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Device.property.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    PhgDevicePropertyTypeCodingTwo[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

